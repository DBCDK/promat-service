#!/usr/bin/env bash

./stop || true

echo "### Starting promat service docker ###"

promat_service_port=${PROMAT_SERVICE_PORT:-8080}
promat_cluster_name=${PROMAT_CLUSTER_NAME:-''}
docker run --rm --name promat-service -d \
    -e JAVA_MAX_HEAP_SIZE=2G \
    -e PROMAT_DB_URL=${PROMAT_DB_URL} \
    -e CULR_SERVICE_URL=${CULR_SERVICE_URL} \
    -e CULR_SERVICE_USER_ID=${CULR_SERVICE_USER_ID} \
    -e CULR_SERVICE_PASSWORD=${CULR_SERVICE_PASSWORD} \
    -e OPENSEARCH_SERVICE_URL=${OPENSEARCH_SERVICE_URL} \
    -e OPENSEARCH_PROFILE=${OPENSEARCH_PROFILE} \
    -e OPENSEARCH_AGENCY=${OPENSEARCH_AGENCY} \
    -e OPENSEARCH_REPOSITORY=${OPENSEARCH_REPOSITORY} \
    -e WORK_PRESENTATION_SERVICE_URL=${WORK_PRESENTATION_SERVICE_URL} \
    -e WORK_PRESENTATION_PROFILE=${WORK_PRESENTATION_PROFILE} \
    -e PROMAT_CLUSTER_NAME=${PROMAT_CLUSTER_NAME} \
    -e MAIL_HOST=${MAIL_HOST} \
    -e MAIL_USER=${MAIL_USER} \
    -e MAIL_FROM=${MAIL_FROM} \
    -e OPENFORMAT_SERVICE_URL=${OPENFORMAT_SERVICE_URL} \
    -p ${promat_service_port}:8080 \
    $@ \
    docker-io.dbc.dk/promat-service:devel

attempts=0
max_attempts=60
until $(curl --output /dev/null --silent --head --fail http://localhost:${promat_service_port}/openapi); do
    if [[ ${attempts} -eq ${max_attempts} ]]; then
        break
    fi

    printf '.'
    attempts=$(($attempts+1))
    sleep 0.5
done

echo ""
echo "### Status for promat service ###"
curl -vs http://localhost:${promat_service_port}/openapi
echo ""
